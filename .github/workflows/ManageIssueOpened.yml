name: Image Magic or Manage Game Files

on:
  issues:
    types: [opened]

jobs:
  imageMagic:
    name: Image Magic
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.issue.title, 'Transform') ||
      startsWith(github.event.issue.title, 'CreateImage') ||
      startsWith(github.event.issue.title, 'ImageToGif') ||
      startsWith(github.event.issue.title, 'GifBackgroundRemoval')

    permissions:
      contents: write
      issues: write

    steps:
      - uses: actions/checkout@v4

      # Cache Python dependencies (write to cache if missing)
      - name: Cache Python dependencies
        id: cache-python-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Set up a Python 3.12 (64-bit) instance
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: "x64"

      # Install Python dependencies (only if not restored from cache)
      - name: Install Python dependencies
        if: steps.cache-python-deps.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt

      # Use pip to install the dependencies and then run the script
      - name: Start image transform
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISALLOWED_WORDS: ${{ vars.DISALLOWED_WORDS }}
        run: |
          python main.py

      # Create new commit with the changed files and push it to GitHub
      - name: Commit and push changes
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "${ISSUE_TITLE} by ${ISSUE_AUTHOR}"
          git push

  ManageGameFiles:
    name: Manage Game Files
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.issue.title, 'DeleteEntry') ||
      startsWith(github.event.issue.title, 'Game')

    permissions:
      contents: write
      issues: write

    steps:
      - uses: actions/checkout@v4

      # Cache Python dependencies (write to cache if missing)
      - name: Cache Python dependencies
        id: cache-python-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('./PlayGame/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Set up a Python 3.12 (64-bit) instance
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: "x64"

      # Install Python dependencies (only if not restored from cache)
      - name: Install Python dependencies
        if: steps.cache-python-deps.outputs.cache-hit != 'true'
        run: |
          pip install -r ./PlayGame/requirements.txt

      # Use pip to install the dependencies and then run the script
      - name: Manage game state
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          python ./PlayGame/manageGameState.py

      # Create new commit with the changed files and push it to GitHub
      - name: Commit and push changes
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "${ISSUE_TITLE} by ${ISSUE_AUTHOR}"
          git push
